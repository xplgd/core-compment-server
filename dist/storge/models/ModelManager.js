"use strict";var __awaiter=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))(function(i,r){function s(e){try{l(n.next(e))}catch(e){r(e)}}function a(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){e.done?i(e.value):new o(function(t){t(e.value)}).then(s,a)}l((n=n.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const typeorm_1=require("typeorm"),Exception_1=require("../../exception/Exception"),MssqlModel_1=require("./MssqlModel"),MysqlModel_1=require("./MysqlModel"),Neo4jModel_1=require("./Neo4jModel"),Neo4jDriver_1=require("../drivers/Neo4jDriver"),model_1=require("../../exception/model");class ModelManager{constructor(){this.tables={},this.entities=[],this.models={},this.registEntity=((e,t)=>{if(this.tables[e]&&null!==this.tables[e])throw new Exception_1.default;const o=typeorm_1.getMetadataArgsStorage().filterTables(t);for(const e of o)if(this.filterEntity(e))throw new Exception_1.default;this.tables[e]=o,this.entities=this.entities.concat(t)}),this.filterEntity=(e=>{let t=null;const o=Object.keys(this.tables);for(const n of o)t=this.tables[n].find(t=>t.name===e.name&&t.schema===e.schema);return t}),this.init=(e=>__awaiter(this,void 0,void 0,function*(){for(const t of e){if(this.models[t.name]&&null!==this.models[t.name])throw new Exception_1.default;"base"===t.name&&(t.entities=this.entities),this.models[t.name]=yield this.createModel(t)}})),this.createModel=(e=>__awaiter(this,void 0,void 0,function*(){switch(e.type=e.type?e.type.toLowerCase():e.type,e.type){case"mysql":{const t=yield typeorm_1.createConnection(e);return new MysqlModel_1.default(t)}case"mssql":return new MssqlModel_1.default(yield typeorm_1.createConnection(e));case"neo4j":return new Neo4jModel_1.Neo4jModel(yield Neo4jDriver_1.createNeoDriver(e));default:throw new Exception_1.default(model_1.default.MODEL_TYPE_NOT_SUPPORT)}})),this.getConnect=(e=>{const t=this.models[e||"base"];if(!t)throw new Exception_1.default;const o=t.getConnect();if(null===o)throw new Exception_1.default;return o}),this.getModel=(e=>{const t=this.models[e||"base"];if(!t)throw new Exception_1.default;return t})}static getInstance(){return ModelManager.modelManager||(ModelManager.modelManager=new ModelManager),ModelManager.modelManager}}exports.default=ModelManager,exports.getConnect=(e=>ModelManager.getInstance().getConnect()),exports.getModel=(e=>ModelManager.getInstance().getModel()),exports.createModel=(e=>__awaiter(this,void 0,void 0,function*(){return yield ModelManager.getInstance().createModel(e)}));