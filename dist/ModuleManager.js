"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(r,a){function o(e){try{s(n.next(e))}catch(e){a(e)}}function u(e){try{s(n.throw(e))}catch(e){a(e)}}function s(e){e.done?r(e.value):new i(function(t){t(e.value)}).then(o,u)}s((n=n.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const _1=require("."),api_1=require("./exception/api"),router_1=require("./router"),debug=require("debug"),ModelManager_1=require("./storge/models/ModelManager");class ModuleManager{constructor(){this.loadModule=(e=>{this.modules.push(e);try{if(!e.name)throw new _1.Exception(api_1.default.MODULE_OPTIONS_ERROR,e.name);e.httpApi&&this.apiMgr.registHttpApi(e.name,e.httpApi),e.entities&&this.modelMgr.registEntity(e.name,e.entities)}catch(t){debug(`module:${e.name}`)(`加载异常${t.message}`)}}),this.initModule=(e=>__awaiter(this,void 0,void 0,function*(){yield this.modelMgr.init(e.getModelOptions());for(const t of this.modules){try{t.init&&(yield t.init())}catch(e){debug(`module:${t.name}`)(`加载异常\n${e.stack}`)}yield this.apiMgr.buildHttpApi(t.name,e),debug(`module:${t.name}`)("加载完成")}})),this.apiMgr=router_1.ApiManager.getInstance(),this.modelMgr=ModelManager_1.default.getInstance(),this.modules=[]}}exports.default=ModuleManager;